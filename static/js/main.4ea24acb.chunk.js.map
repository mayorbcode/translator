{"version":3,"sources":["contexts/ContextProvider.js","components/Input.js","components/Output.js","components/SubmitButton.js","App.js","index.js"],"names":["TranslateContext","React","createContext","useTranslateContext","useContext","ContextProvider","children","useState","languages","setLanguages","inputLanguage","setInputLanguage","outputLanguage","setOutputLanguage","input","setInput","loading","setLoading","result","setResult","error","setError","getLanguages","a","axios","get","response","languagesArray","Object","entries","data","translation","console","log","useEffect","handleSubmit","e","preventDefault","fromArray","find","language","name","from","toArray","to","params","headers","process","post","translations","text","message","value","handleInput","target","handleInputSelect","handleOutputSelect","Provider","Input","languageOptions","map","item","index","data-value","nativeName","className","htmlFor","type","list","id","onChange","Output","SubmitButton","props","disabled","onClick","App","length","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.4ea24acb.chunk.js","sourcesContent":["import React, {useState, useEffect, useContext} from 'react';\nimport axios from 'axios';\n\nexport const TranslateContext = React.createContext();\n\nexport const useTranslateContext = () => useContext(TranslateContext);\n\nconst ContextProvider = ({children}) => {\n  const [languages, setLanguages] = useState([]);\n  const [inputLanguage, setInputLanguage] = useState('');\n  const [outputLanguage, setOutputLanguage] = useState('');\n  const [input, setInput] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [result, setResult] = useState(null);\n  const [error, setError] = useState('');\n\n  const getLanguages = async () => {\n    try {\n      setLoading(true)\n      const response = await axios.get('https://api.cognitive.microsofttranslator.com/languages?api-version=3.0');\n      // console.log(response.data.translation);\n      const languagesArray = Object.entries(response.data.translation);\n      // console.log(languagesArray);\n      // console.log(languagesArray[0]);\n      setLanguages(languagesArray);\n    }\n    catch (err) {\n      console.log(err)\n    }\n    setLoading(false)\n  }\n\n  useEffect(() => {\n    getLanguages();\n  }, []);\n\n  const handleInput = (e) => {\n    setInput(e.target.value);\n  }\n\n  const handleInputSelect = (e) => {\n    // console.log(e.target.value);\n    setInputLanguage(e.target.value);\n  }\n  const handleOutputSelect = (e) => {\n    // console.log(e.target.value);\n    setOutputLanguage(e.target.value);\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const apiURL = \"http://translatorendpoint-env.eba-fphmv3jp.us-east-2.elasticbeanstalk.com/translate\";\n    const fromArray = languages.find(language => language[1].name === inputLanguage);\n    const from = fromArray ? fromArray[0] : null;\n    const toArray = languages.find(language => language[1].name === outputLanguage);\n    const to = toArray ? toArray[0] : null;\n    // console.log(from);\n    // console.log(to);\n      if (from !== null && to !== null) {\n        try {\n          setLoading(true);\n          setError('');\n          const data = [\n            {\n              'text': input\n            }\n          ]\n          const params = {\n            'api-version': '3.0',\n            'from': from,\n            'to': to\n          }\n          const headers = {\n            \"key\": process.env.REACT_APP_AZURE_API_KEY_1,\n            \"location\": process.env.REACT_APP_AZURE_API_REGION,\n          }\n          const response = await axios.post(apiURL, data, { params, headers })\n          // console.log(response.data);\n          // console.log(response.data[0].translations[0].text);\n          setResult(response.data[0].translations[0].text);\n        }\n        catch (err) {\n          console.log(err.message);\n        }\n      }\n      else if (from === null) {\n        return setError('Could not find selected input language');\n      }\n      else if (to === null) {\n        return setError('Could not find selected output language');\n      }\n      setLoading(false);\n  }\n\n  const value = {\n    languages,\n    inputLanguage,\n    setInputLanguage,\n    outputLanguage,\n    setOutputLanguage,\n    input,\n    setInput,\n    result,\n    loading,\n    handleInput,\n    handleSubmit,\n    handleInputSelect,\n    handleOutputSelect,\n    error\n  };\n\n  return (\n    <TranslateContext.Provider value={value}>\n      {children}\n    </TranslateContext.Provider>\n  )\n}\n\nexport default ContextProvider;","import React from 'react';\nimport { useTranslateContext } from '../contexts/ContextProvider';\n\nconst Input = () => {\n  const { input, handleInput, inputLanguage, handleInputSelect, languages } = useTranslateContext();\n\n  const languageOptions = languages.map((item, index) => {\n    return <option key={item[1].nativeName} data-value={item[0]} value={item[1].name}></option>\n  })\n  return (\n    <div className=\"input\">\n      <form>\n        <div>\n          <label htmlFor=\"data\">Select Input Language</label>\n          <input \n            type=\"text\" \n            list=\"datalist\" \n            id=\"data\" \n            name=\"input\"\n            onChange={handleInputSelect}\n            value={inputLanguage}\n          />\n          <datalist id=\"datalist\">\n            {languageOptions}\n          </datalist>\n        </div>\n        <div>\n          <label htmlFor=\"input\">Translate</label>\n          <textarea \n            id=\"input\"\n            value={input}\n            onChange={handleInput}\n          />\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default Input;","import React from 'react';\nimport { useTranslateContext } from '../contexts/ContextProvider';\n\nconst Output = () => {\n  const { result, outputLanguage, handleOutputSelect, languages } = useTranslateContext();\n\n  const languageOptions = languages.map(item => {\n    return <option key={item[0]} data-value={item[0]} value={item[1].name}></option>\n  })\n  return (\n    <div className=\"output\">\n      <div className=\"select\">\n          <label htmlFor=\"data1\">Select Output Language</label>\n          <input \n            type=\"text\" \n            list=\"datalist1\" \n            id=\"data1\" \n            name=\"output\"\n            value={outputLanguage}\n            onChange={handleOutputSelect}\n          />\n          <datalist id=\"datalist1\">\n            {languageOptions}\n          </datalist>\n        </div>\n      <div className=\"result\">\n        <p>Translation</p>\n        <p className=\"text\">\n          {result && result}\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default Output;","import React from 'react';\nimport { useTranslateContext } from '../contexts/ContextProvider';\n\nconst SubmitButton = (props) => {\n  const { loading, handleSubmit } = useTranslateContext();\n  return (\n    <div className=\"submit-button\">\n      <button\n        disabled={loading}\n        onClick={handleSubmit}\n      >\n        Translate\n      </button>\n    </div>\n  );\n}\n\nexport default SubmitButton;","import React from 'react';\nimport './App.css';\nimport Input from './components/Input';\nimport Output from './components/Output';\nimport SubmitButton from './components/SubmitButton';\nimport { useTranslateContext } from './contexts/ContextProvider';\n\nconst App = (props) => {\n  const { error } = useTranslateContext();\n\n  return (\n    <div className=\"app\">\n      <h1 className=\"title\">Translator</h1>\n      <div className=\"error\">\n        {error.length > 0 && <h2>Error: {error}</h2>}\n      </div>\n      <div className=\"boxes\">\n        <Input />\n        <Output />\n      </div>\n      <SubmitButton />\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport ContextProvider from './contexts/ContextProvider';\n\nReactDOM.render(\n  <ContextProvider>\n    <App />\n  </ContextProvider>,\n  document.querySelector('#root')\n);"],"sourceRoot":""}